service: bitcoin-guess-predictor

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-central-1
  stage: ${opt:stage, 'prod'}
  environment:
    PLAYERS_TABLE: ${self:service}-players-${self:provider.stage}
    GUESSES_TABLE: ${self:service}-guesses-${self:provider.stage}
    STAGE: ${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.PLAYERS_TABLE}"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.GUESSES_TABLE}"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.GUESSES_TABLE}/index/*"
        - Effect: Allow
          Action:
            - events:PutEvents
          Resource:
            - "arn:aws:events:${self:provider.region}:*:event-bus/default"
        - Effect: Allow
          Action:
            - scheduler:CreateSchedule
            - scheduler:DeleteSchedule
          Resource:
            - "arn:aws:scheduler:${self:provider.region}:${aws:accountId}:schedule/default/resolve-guess-*"
        - Effect: Allow
          Action:
            - sts:GetCallerIdentity
          Resource: "*"
        - Effect: Allow
          Action:
            - iam:PassRole
          Resource:
            - "arn:aws:iam::${aws:accountId}:role/${self:service}-${self:provider.stage}-scheduler-role"
          Condition:
            StringEquals:
              iam:PassedToService: scheduler.amazonaws.com

functions:
  createPlayer:
    handler: src/handlers/createPlayer.handler
    events:
      - http:
          path: api/player
          method: post
          cors:
            origin: 'https://bitcoin-guess-predictor-frontend.vercel.app'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  getPlayerState:
    handler: src/handlers/getPlayerState.handler
    events:
      - http:
          path: api/player/{userId}
          method: get
          cors:
            origin: 'https://bitcoin-guess-predictor-frontend.vercel.app'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  getPlayerGuesses:
    handler: src/handlers/getPlayerGuesses.handler
    events:
      - http:
          path: api/guesses/{userId}
          method: get
          cors:
            origin: 'https://bitcoin-guess-predictor-frontend.vercel.app'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  makeGuess:
    handler: src/handlers/makeGuess.handler
    events:
      - http:
          path: api/guess
          method: post
          cors:
            origin: 'https://bitcoin-guess-predictor-frontend.vercel.app'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

  resolveGuess:
    handler: src/handlers/resolveGuess.handler
    events:
      - http:
          path: api/resolve
          method: post
          cors:
            origin: 'https://bitcoin-guess-predictor-frontend.vercel.app'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
      - eventBridge:
          pattern:
            source:
              - bitcoin-guess-predictor
            detail-type:
              - Resolve Guess

resources:
  Resources:
    EventBridgeSchedulerRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-${self:provider.stage}-scheduler-role
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: scheduler.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: InvokeLambdaPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - lambda:InvokeFunction
                  Resource:
                    Fn::GetAtt:
                      - ResolveGuessLambdaFunction
                      - Arn

    PlayersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PLAYERS_TABLE}
        AttributeDefinitions:
          - AttributeName: playerId
            AttributeType: S
        KeySchema:
          - AttributeName: playerId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    GuessesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.GUESSES_TABLE}
        AttributeDefinitions:
          - AttributeName: guessId
            AttributeType: S
          - AttributeName: playerId
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: guessId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: PlayerGuessesIndex
            KeySchema:
              - AttributeName: playerId
                KeyType: HASH
              - AttributeName: status
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: PlayerTimeIndex
            KeySchema:
              - AttributeName: playerId
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-offline
